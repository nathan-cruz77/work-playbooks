---
- name: playbook to install kubernetes tools
  hosts: localhost
  connection: local
  vars_files:
    - ../vars/kubernetes.yml

  tasks:
    - name: Install dependencies

      become_user: root
      apt:
        name:
          - apt-transport-https
          - gnupg2
          - curl
          - jq
        state: latest
        update_cache: no

    - name: Check current kubectl version
      command: kubectl version --client
      register: kubectl_vsn
      changed_when: false
      failed_when: false
      check_mode: no

    - set_fact:
        kubectl_current_version: "{{ kubectl_vsn.stdout | regex_search('(v\\d+(\\.\\d+)+)') }}"
      when:
        - kubectl_vsn.stdout is defined

    - name: Add Kubernetes GPG apt key
      become: yes
      become_user: root
      apt_key:
        url: '{{ kubernetes_apt_key }}'
        state: present

    - name: Add Kubernetes Repository
      become: yes
      become_user: root
      apt_repository:
        repo: '{{ kubernetes_apt_repo }}'
        state: present
        update_cache: yes

    - name: Install or upgrade kubectl
      become: yes
      become_user: root
      apt:
        name: 'kubectl={{ kubectl_version | default(kubectl_default_version) }}'
      when: >
        kubectl_current_version is not defined
        or kubectl_version is not defined
        or kubectl_current_version != kubectl_version

    - name: Mark to hold kubectl
      become: yes
      become_user: root
      dpkg_selections:
        name: kubectl
        selection: hold

    - include_tasks: ../common/download-binary-from-github.yml
      vars:
        package: kubectx

    - include_tasks: ../common/download-binary-from-github.yml
      vars:
        package: kubens

    - name: Check if minikube exist and is in the latest version
      command: minikube update-check
      register: minikube_vsn
      changed_when: false
      failed_when: false
      check_mode: no

    - set_fact:
        minikube_current_version: "{{ minikube_vsn.stdout | regex_search('(CurrentVersion: v\\d+(\\.\\d+)+)') | regex_replace('CurrentVersion: ') }}"
        minikube_latest_version: "{{ minikube_vsn.stdout | regex_search('(LatestVersion: v\\d+(\\.\\d+)+)') | regex_replace('LatestVersion: ') }}"
      when:
        - minikube_vsn.stdout is defined

    - name: Install or upgrade minikube
      become: yes
      become_user: root
      get_url:
        url: '{{ minikube_url }}'
        dest: /usr/local/bin/minikube
        mode: '+x'
        force: yes
      when: >
        minikube_current_version is not defined
        or minikube_current_version != minikube_latest_version
