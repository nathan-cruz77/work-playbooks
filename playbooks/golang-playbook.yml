---
- name: playbook to install golang
  hosts: localhost
  connection: local
  vars_files:
    - ../vars/golang.yml

  tasks:
    - name: Check go verison
      command: go version
      register: golang_vsn
      changed_when: false
      failed_when: false

    - set_fact:
        golang_current_version: "{{ golang_vsn.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"
      when:
        - golang_vsn.stdout is defined

    - name: Install golang
      become: true
      unarchive:
        src: '{{ golang_url }}'
        dest: /usr/lib
        remote_src: yes
      when: >
        golang_current_version is not defined
        or golang_current_version is version(golang_version, '!=')

    - name: Check if exist bash export
      command: 'grep -F "GOROOT" {{ bashrc_path }}'
      register: golang_vars
      changed_when: false
      failed_when: false
      check_mode: no

    - set_fact:
        golang_current_var: '{{ golang_vars.stdout }}'
      when:
        - golang_vars.stdout is defined

    - name: Add golang vars
      lineinfile:
        path: '{{ bashrc_path }}'
        line: '{{ item }}'
      loop: '{{ golang_env_vars }}'
      when:
        - golang_current_var is defined
        - golang_current_var == ""

    - name: Install tools
      shell: '{{ update_path }} && GO111MODULE=on go get {{ item.url }}@{{ item.version | default("latest") }}'
      loop: '{{ tools | default(default_tools) }}'
